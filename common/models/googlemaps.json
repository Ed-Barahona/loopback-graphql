{
    "name": "Googlemaps",
    "plural": "Googlemaps",
    "base": "Model",
    "idInjection": false,
    "options": {
        "validateUpsert": true
    },
    "properties": {
        "icon": {
            "type": "string",
            "description": "contains the URL of a recommended icon which may be displayed to the user when indicating this result."
        },
        "id": {
            "type": "string",
            "description": "contains a unique stable identifier denoting this place. This identifier may not be used to retrieve information about this place, but is guaranteed to be valid across sessions. It can be used to consolidate data about this place, and to verify the identity of a place across separate searches. **Note**: The `id` is now deprecated in favor of `place_id`."
        },
        "geometry": {
            "type": {
                "location": {
                    "lat": "number",
                    "lng": "number"
                },
                "viewport": {
                    "northeast": {
                        "lat": "number",
                        "lng": "number"
                    },
                    "southwest": {
                        "lat": "number",
                        "lng": "number"
                    }
                }
            },
            "description": "contains geometry information about the result, generally including the `location` (geocode) of the place and (optionally) the `viewport` identifying its general area of coverage."
        },
        "name": {
            "type": "string",
            "description": "contains the human-readable name for the returned result. For `establishment` results, this is usually the business name."
        },
        "opening_hours": {
            "open_now": {
                "type": "boolean",
                "description": "is a boolean value indicating if the place is open at the current time."
            }
        },
        "photos": {
            "description": "an array of `photo` objects, each containing a reference to an image. A Place Search will return at most one `photo` object. Performing a Place Details request on the place may return up to ten photos. More information about Place Photos and how you can use the images in your application can be found in the [Place Photos](https://developers.google.com/places/web-service/photos) documentation.",
            "type": [{
                "photo_reference": {
                    "type": "string",
                    "description": " a string used to identify the photo when you perform a Photo request."
                },
                "height": {
                    "type": "number",
                    "description": " the maximum height of the image."
                },
                "width": {
                    "type": "number",
                    "description": " the maximum width of the image."
                },
                "html_attributions": {
                    "type": ["string"],
                    "description": "contains any required attributions. This field will always be present, but may be empty."
                }
            }]
        },
        "place_id": {
            "type": "string",
            "description": "a textual identifier that uniquely identifies a place. To retrieve information about the place, pass this identifier in the `placeId` field of a Places API request. For more information about place IDs, see the [place ID overview](https://developers.google.com/places/place-id)."
        },
        "scope": {
            "type": "string",
            "description": [
                "Indicates the scope of the `place_id`. The possible values are:", " * `APP`: The place ID is recognised by your application only. This is because your application added the place, and the place has not yet passed the moderation process.", " * `GOOGLE`: The place ID is available to other applications and on Google Maps.", "**Note**: The `scope` field is included only in Nearby Search results and Place Details results. You can only retrieve app-scoped places via the Nearby Search and the Place Details requests. If the `scope` field is not present in a response, it is safe to assume the scope is `GOOGLE`."
            ]
        },
        "alt_ids": {
            "type": {
                "place_id": {
                    "type": "string",
                    "description": "The most likely reason for a place to have an alternative place ID is if your application adds a place and receives an application-scoped place ID, then later receives a Google-scoped place ID after passing the moderation process."
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of an alternative place ID will always be APP, indicating that the alternative place ID is recognised by your application only."
                }
            },
            "description": ["An array of zero, one or more alternative place IDs for the place, with a scope related to each alternative ID. Note: This array may be empty or not present.", "For example, let's assume your application adds a place and receives a `place_id` of `AAA` for the new place. Later, the place passes the moderation process and receives a Google-scoped `place_id` of `BBB`. From this point on, the information for this place will contain:", "```", "\"results\" : [", "      {", "        \"place_id\" : \"BBB\",", "        \"scope\" : \"GOOGLE\",", "        \"alt_ids\" : [", "          {", "            \"place_id\" : \"AAA\",", "            \"scope\" : \"APP\",", "          }", "        ],", "      }", "    ]", "```"]
        },
        "price_level": {
            "type": "number",
            "description": ["The price level of the place, on a scale of 0 to 4. The exact amount indicated by a specific value will vary from region to region. Price levels are interpreted as follows:", " + `0` — Free", " + `1` — Inexpensive", " + `2` — Moderate", " + `3` — Expensive", " + `4` — Very Expensive"]
        },
        "rating": {
            "type": "number",
            "description": "contains the place's rating, from 1.0 to 5.0, based on aggregated user reviews."
        },
        "reference": {
            "type": "string",
            "description": "contains a unique token that you can use to retrieve additional information about this place in a Place Details request. Although this token uniquely identifies the place, the converse is not true. A place may have many valid reference tokens. It's not guaranteed that the same token will be returned for any given place across different searches. **Note**: The `reference` is now deprecated in favor of `place_id`."
        },
        "types": {
            "type": ["string"],
            "description": "contains an array of feature types describing the given result. See the [list of supported types](https://developers.google.com/places/supported_types) for more information."
        },
        "vicinity": {
            "type": "string",
            "description": "contains a feature name of a nearby location. Often this feature refers to a street or neighborhood within the given results. The `vicinity` property is only returned for a Nearby Search."
        },
        "formatted_address": {
            "type": "string",
            "description": "is a string containing the human-readable address of this place. Often this address is equivalent to the \"postal address\". The `formatted_address` property is only returned for a Text Search."
        },
        "permanently_closed": {
            "type": "boolean",
            "description": "is a boolean flag indicating whether the place has permanently shut down (value `true`). If the place is not permanently closed, the flag is absent from the response."
        }
    },
    "validations": [],
    "relations": {},
    "acls": [],
    "methods": {}
}